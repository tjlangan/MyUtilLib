1) int, float / double, complex versions of Array
2) ReturnType struct to handle return types and errors 
typedef struct {
    bool error; 
    union {
        error code enum maybe
        value
    } ReturnType; 
}
could just check boolean then if there is an error send the error code to a function
to print / log the error
3) Make decision about interate function. do you want it to be able modify values or not 
4) make array have a sort of dataype union / enum or something and then just have functions
hand accordingly --> idk kinda like the genericness of Array, this would limit it 

5) create my own "Generic Element/Item" data class that contains data_size and data and have all 
structures be build arround that. essentially just a just a size_t data_size and void* data

TODO: NEED better error handling for nulls. 